{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "bigger\n",
      "i am done with conditional codes :-)\n"
     ]
    }
   ],
   "source": [
    "x=10\n",
    "if x<=4:\n",
    "    print('smaller')\n",
    "else:\n",
    "    print('bigger')\n",
    "print('i am done with conditional codes :-)')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "condition 2\n"
     ]
    }
   ],
   "source": [
    "x=5\n",
    "if x<2:\n",
    "    print('condition 1')\n",
    "elif x<10:\n",
    "    print('condition 2')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "true\n",
      "program flow occurs from top to bottom :)\n"
     ]
    }
   ],
   "source": [
    "x=6\n",
    "if x<20:\n",
    "    print('true')\n",
    "elif x<10:\n",
    "    print('ok')\n",
    "elif x<5:\n",
    "    print('random')\n",
    "print('program flow occurs from top to bottom :)')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "First -1\n"
     ]
    }
   ],
   "source": [
    "a=('hello bob')\n",
    "try:\n",
    "    i=int(a)\n",
    "except:\n",
    "    i=-1\n",
    "print('First', i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Second 123\n"
     ]
    }
   ],
   "source": [
    "a=('123')\n",
    "try:\n",
    "    i=int(a)\n",
    "except:\n",
    "    i=-1\n",
    "print('Second', i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "forty two\n",
      "Bad\n",
      "This is a much more practical example of if-else and try-except code :)\n"
     ]
    }
   ],
   "source": [
    "rawstr=input('')\n",
    "try:\n",
    "    value=int(rawstr)\n",
    "except:\n",
    "    value=-1\n",
    "if value>0:\n",
    "    print('Awesome')\n",
    "else:\n",
    "    print('Bad')\n",
    "print('This is a much more practical example of if-else and try-except code :)')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "x=4\n",
    "if  x == 5 :\n",
    "    print('Is 5')\n",
    "    print('Is Still 5')\n",
    "    print('Third 5')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
